
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x0f^\xc6\xa5\xcf\xb5\xac\t\x1a\x10\xe6\x07I\xc9A\xa1'
    
_lr_action_items = {'PEEK':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[139,139,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'STAR':([4,19,21,57,72,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,292,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,96,-128,-127,-106,-98,-95,-126,-97,-101,-131,218,-129,218,-100,218,-96,-122,-121,218,-102,-123,218,-130,218,218,218,-107,218,218,218,218,218,218,-108,218,218,218,218,96,218,-104,-125,-99,-124,-126,218,-103,-88,-105,218,-89,]),'EXTERN_TYPE':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[18,18,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,18,-18,-20,-15,-12,-11,-8,-10,-14,]),'FLOATNUMBER':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[141,141,141,141,-91,141,141,-74,-73,141,141,141,141,141,141,141,-80,141,141,141,141,141,141,141,141,141,141,141,141,-90,141,141,141,141,-81,-86,-92,141,-83,-93,-94,-84,-82,-85,-87,]),'VOID':([0,1,4,6,14,43,52,58,69,90,106,112,125,126,130,169,170,171,176,177,189,192,197,236,238,239,241,247,289,295,296,313,315,319,320,349,350,],[2,2,-64,-22,-25,-59,-6,-7,-21,-58,2,-9,-16,2,2,-74,-27,-24,-26,-23,-17,-13,-73,-19,2,-18,-20,-15,-32,-12,-11,-8,-10,-33,-14,-31,-30,]),'GLOBAL':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[3,3,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,3,-18,-20,-15,-12,-11,-8,-10,-14,]),'NUMBER':([97,113,116,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[120,142,173,142,142,142,-91,142,142,-74,-73,142,142,142,142,142,142,142,-80,142,142,142,142,142,142,142,142,142,142,142,142,-90,142,142,142,142,-81,-86,-92,142,-83,-93,-94,-84,-82,-85,-87,]),',':([4,19,21,31,42,43,44,46,47,54,55,56,57,59,60,61,64,70,75,77,86,90,91,94,95,99,105,117,118,119,120,136,137,138,141,142,145,150,154,157,159,162,163,165,172,173,174,178,184,188,191,198,208,211,233,234,250,253,255,256,258,260,261,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,283,287,292,299,303,309,311,316,318,321,324,327,328,332,336,340,342,345,360,],[-64,-45,-44,50,50,-59,63,67,50,50,50,50,-43,50,50,84,89,93,-72,98,108,-58,111,50,-52,50,128,-53,-70,-69,-71,50,-131,50,-128,-127,-106,-98,-95,-126,-97,-101,-131,-129,-57,-55,-56,50,240,50,50,-100,-96,-122,-121,-54,297,298,-102,301,-123,304,305,307,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,-118,312,50,317,-104,-125,-99,-124,50,50,50,341,50,50,348,317,-103,-88,-105,-89,]),'IDENT':([0,1,2,4,6,10,14,15,19,21,27,28,29,30,34,35,36,37,39,40,41,43,45,49,50,52,53,57,58,63,64,67,69,72,84,87,89,90,93,96,97,98,106,108,111,112,113,123,124,125,126,127,128,130,131,132,134,135,140,144,148,153,155,156,160,163,168,169,170,171,176,177,180,186,189,192,195,197,199,200,201,202,204,205,206,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,241,245,246,247,248,251,284,289,292,295,296,297,298,300,301,304,305,306,307,310,313,315,317,319,320,326,331,333,341,349,350,355,356,357,359,361,362,364,],[4,4,-46,-64,-22,4,-25,4,-45,-44,4,4,4,4,4,4,4,4,4,4,4,-59,4,4,4,-6,4,-43,-7,4,4,4,-21,4,4,4,4,-58,4,4,4,4,4,4,4,-9,4,4,4,-16,4,4,4,4,4,-47,-48,4,4,4,4,4,-91,4,4,-44,4,-74,-27,-24,-26,-23,4,4,-17,4,4,-73,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-80,4,4,4,4,4,4,4,4,4,4,4,4,4,-19,4,-18,4,-20,4,4,-15,4,-90,-36,-32,4,4,-11,4,4,4,4,4,4,4,4,-81,-8,-10,4,-33,-14,-86,-92,-39,4,-31,-30,-83,-93,-94,-84,-82,-85,-87,]),'NEW':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[144,144,144,144,-91,144,144,-74,-73,144,144,144,144,144,144,144,-80,144,144,144,144,144,144,144,144,144,144,144,144,-90,144,144,144,144,-81,-86,-92,144,-83,-93,-94,-84,-82,-85,-87,]),'RIGHTSHIFT':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,227,-129,227,-100,227,-96,-122,-121,227,-102,-123,227,-130,227,-120,227,-107,227,227,-110,227,227,-109,-108,-119,227,227,227,227,-104,-125,-99,-124,-126,227,-103,-88,-105,227,-89,]),'DOT':([4,19,21,57,141,142,145,150,154,157,159,162,163,165,198,208,255,258,266,299,303,309,311,324,340,342,345,360,],[-64,-45,-44,-43,-128,-127,200,-98,-95,-126,-97,-101,-131,-129,-100,-96,-102,-123,-130,-104,-125,-99,-124,-126,-103,-88,-105,-89,]),'LEFTSHIFT':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,216,-129,216,-100,216,-96,-122,-121,216,-102,-123,216,-130,216,-120,216,-107,216,216,-110,216,216,-109,-108,-119,216,216,216,216,-104,-125,-99,-124,-126,216,-103,-88,-105,216,-89,]),'TRANS':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[7,7,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,7,-18,-20,-15,-12,-11,-8,-10,-14,]),'SEMI':([4,19,21,31,32,38,48,51,57,64,75,76,77,94,99,102,115,118,119,120,121,122,141,142,145,150,154,157,159,162,163,164,165,178,191,196,198,208,211,233,235,244,249,255,258,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,287,294,299,302,303,309,311,314,318,338,340,342,345,346,354,360,363,],[-64,-45,-44,-2,52,58,69,-66,-43,87,-72,-65,-68,-2,-2,125,171,-70,-69,-71,-67,177,-128,-127,-106,-98,-95,-126,-97,-101,-131,219,-129,-2,-2,251,-100,-96,-122,-121,284,289,296,-102,-123,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,310,-118,-2,319,-104,326,-125,-99,-124,333,-2,350,-103,-88,-105,355,362,-89,364,]),'STATIC_CAST':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[146,146,146,146,-91,146,146,-74,-73,146,146,146,146,146,146,146,-80,146,146,146,146,146,146,146,146,146,146,146,146,-90,146,146,146,146,-81,-86,-92,146,-83,-93,-94,-84,-82,-85,-87,]),')':([4,19,21,42,43,47,49,51,53,54,55,56,57,59,60,62,68,70,71,73,75,76,77,78,79,80,81,82,83,86,90,93,95,107,114,117,118,119,120,121,136,137,138,141,142,145,150,154,157,159,162,163,165,172,173,174,188,193,194,198,203,208,211,213,233,234,243,245,252,253,255,257,258,259,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,290,291,292,293,298,299,300,303,306,309,311,317,321,322,323,324,325,327,328,329,330,335,336,337,339,340,342,343,344,345,352,358,360,],[-64,-45,-44,-2,-59,-2,-2,-66,-2,-2,-2,-2,-43,-2,-2,85,92,-50,94,-51,-72,-65,-68,99,100,101,102,103,104,-2,-58,-2,-52,135,-49,-53,-70,-69,-71,-67,-2,-131,-2,-128,-127,-106,-98,-95,-126,-97,-101,-131,-129,-57,-55,-56,-2,248,249,-100,258,-96,-122,-2,-121,-54,288,-2,-79,-78,-102,302,-123,303,308,309,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,-118,311,316,-42,-41,318,-2,-104,-2,-125,-2,-99,-124,-2,-2,-77,340,-126,342,-2,-2,345,346,-40,-41,-42,351,-103,-88,353,354,-105,360,363,-89,]),'(':([3,4,7,8,9,16,17,18,22,23,25,31,33,113,139,140,146,147,148,149,151,152,153,155,158,160,161,163,166,167,168,169,191,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,255,262,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[27,-64,28,29,30,34,35,36,39,40,41,49,53,148,195,148,201,202,148,204,205,206,148,-91,210,148,212,213,231,232,148,-74,245,-73,148,148,148,148,148,148,148,-80,148,148,148,148,148,148,148,148,148,148,148,148,-90,300,306,148,148,148,148,-81,-86,-92,148,-83,-93,-94,-84,-82,-85,-87,]),'IS_INVALID':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[149,149,149,149,-91,149,149,-74,-73,149,149,149,149,149,149,149,-80,149,149,149,149,149,149,149,149,149,149,149,149,-90,149,149,149,149,-81,-86,-92,149,-83,-93,-94,-84,-82,-85,-87,]),'NE':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,221,-129,221,-100,221,-96,-122,-121,221,-102,-123,221,-130,221,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,221,221,221,-104,-125,-99,-124,-126,221,-103,-88,-105,221,-89,]),'OUT_PORT':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[8,8,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,8,-18,-20,-15,-12,-11,-8,-10,-14,]),'ENQUEUE':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[151,151,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'LT':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,223,-129,223,-100,223,-96,-122,-121,223,-102,-123,223,-130,223,-120,-112,-107,-114,223,-110,-111,-113,-109,-108,-119,223,223,223,223,-104,-125,-99,-124,-126,223,-103,-88,-105,223,-89,]),'DOUBLE_COLON':([4,19,21,57,156,163,],[-64,37,-44,-43,209,-44,]),'PLUS':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,225,-129,225,-100,225,-96,-122,-121,225,-102,-123,225,-130,225,225,225,-107,225,225,-110,225,225,-109,-108,225,225,225,225,225,-104,-125,-99,-124,-126,225,-103,-88,-105,225,-89,]),'ACTION':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[9,9,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,9,-18,-20,-15,-12,-11,-8,-10,-14,]),':':([4,101,163,286,],[-64,124,214,214,]),'=':([4,74,95,117,136,],[-64,97,116,175,97,]),'ASSIGN':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,191,198,208,211,233,255,258,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,299,303,309,311,340,342,345,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,229,-129,246,-100,-96,-122,-121,-102,-123,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,-118,-104,-125,-99,-124,-103,-88,-105,-89,]),'$end':([0,1,4,5,6,11,12,14,24,26,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,239,241,247,295,296,313,315,320,],[-2,-2,-64,0,-22,-5,-3,-25,-1,-4,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,-18,-20,-15,-12,-11,-8,-10,-14,]),'GT':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,217,-129,217,-100,217,-96,-122,-121,217,-102,-123,217,-130,217,-120,-112,-107,-114,217,-110,-111,-113,-109,-108,-119,217,217,217,217,-104,-125,-99,-124,-126,217,-103,-88,-105,217,-89,]),'PROTOCOL':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[13,13,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,13,-18,-20,-15,-12,-11,-8,-10,-14,]),'STRING':([13,20,50,97,98,108,113,116,140,148,153,155,160,168,169,175,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,312,326,331,341,348,355,356,357,359,361,362,364,],[32,38,75,119,75,75,157,172,157,157,157,-91,157,157,-74,234,-73,157,157,157,157,157,157,157,-80,157,157,157,157,157,157,157,157,157,157,157,157,-90,157,157,324,157,-81,332,-86,-92,157,358,-83,-93,-94,-84,-82,-85,-87,]),'STALL_AND_WAIT':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[158,158,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'OOD':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[162,162,162,162,-91,162,162,-74,-73,162,162,162,162,162,162,162,-80,162,162,162,162,162,162,162,162,162,162,162,162,-90,162,162,162,162,-81,-86,-92,162,-83,-93,-94,-84,-82,-85,-87,]),'ENUM':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[16,16,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,16,-18,-20,-15,-12,-11,-8,-10,-14,]),'ELSE':([169,197,331,],[-74,-73,347,]),'MACHINE':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[17,17,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,17,-18,-20,-15,-12,-11,-8,-10,-14,]),'GE':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,220,-129,220,-100,220,-96,-122,-121,220,-102,-123,220,-130,220,-120,-112,-107,-114,220,-110,-111,-113,-109,-108,-119,220,220,220,220,-104,-125,-99,-124,-126,220,-103,-88,-105,220,-89,]),'LE':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,224,-129,224,-100,224,-96,-122,-121,224,-102,-123,224,-130,224,-120,-112,-107,-114,224,-110,-111,-113,-109,-108,-119,224,224,224,224,-104,-125,-99,-124,-126,224,-103,-88,-105,224,-89,]),'SLASH':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,226,-129,226,-100,226,-96,-122,-121,226,-102,-123,226,-130,226,226,226,-107,226,226,226,226,226,226,-108,226,226,226,226,226,-104,-125,-99,-124,-126,226,-103,-88,-105,226,-89,]),'[':([4,19,21,57,141,142,145,150,154,157,159,162,163,165,198,208,255,258,266,299,303,309,311,324,340,342,345,360,],[-64,-45,-44,-43,-128,-127,199,-98,-95,-126,-97,-101,-131,-129,-100,-96,-102,-123,-130,-104,-125,-99,-124,-126,-103,-88,-105,-89,]),'INCLUDE':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[20,20,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,20,-18,-20,-15,-12,-11,-8,-10,-14,]),']':([4,19,21,57,141,142,145,150,154,157,159,162,163,165,198,199,208,211,233,252,253,254,255,258,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,298,299,303,309,311,322,340,342,345,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,-129,-100,-2,-96,-122,-121,-79,-78,299,-102,-123,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,-118,-2,-104,-125,-99,-124,-77,-103,-88,-105,-89,]),'IF':([113,153,155,169,197,219,251,310,326,331,347,355,356,357,359,361,362,364,],[161,161,-91,-74,-73,-80,-90,-81,-86,-92,161,-83,-93,-94,-84,-82,-85,-87,]),'AND':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,215,-129,215,-100,215,-96,-122,-121,215,-102,-123,215,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,215,-118,215,-104,-125,-99,-124,-126,215,-103,-88,-105,215,-89,]),'DASH':([4,19,21,57,113,140,141,142,145,148,150,153,154,155,157,159,160,162,163,164,165,168,169,196,197,198,199,203,208,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,246,251,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,298,299,300,301,303,306,309,310,311,324,325,326,331,340,341,342,345,352,355,356,357,359,360,361,362,364,],[-64,-45,-44,-43,160,160,-128,-127,-106,160,-98,160,-95,-91,-126,-97,160,-101,-131,222,-129,160,-74,222,-73,-100,160,222,-96,-122,160,160,160,160,160,160,-80,160,160,160,160,160,160,160,160,160,160,160,-121,160,-90,222,-102,-123,222,-130,222,222,222,-107,222,222,-110,222,222,-109,-108,222,222,222,222,222,160,-104,160,160,-125,160,-99,-81,-124,-126,222,-86,-92,-103,160,-88,-105,222,-83,-93,-94,-84,-89,-82,-85,-87,]),'RETURN':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[140,140,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'EQ':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,228,-129,228,-100,228,-96,-122,-121,228,-102,-123,228,-130,228,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,228,228,228,-104,-125,-99,-124,-126,228,-103,-88,-105,228,-89,]),'STRUCT':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[22,22,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,22,-18,-20,-15,-12,-11,-8,-10,-14,]),'COPY_HEAD':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[152,152,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'STATE_DECL':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[23,23,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,23,-18,-20,-15,-12,-11,-8,-10,-14,]),'CHECK_ALLOCATE':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[147,147,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'LIT_BOOL':([113,116,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[165,174,165,165,165,-91,165,165,-74,-73,165,165,165,165,165,165,165,-80,165,165,165,165,165,165,165,165,165,165,165,165,-90,165,165,165,165,-81,-86,-92,165,-83,-93,-94,-84,-82,-85,-87,]),'IS_VALID':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[166,166,166,166,-91,166,166,-74,-73,166,166,166,166,166,166,166,-80,166,166,166,166,166,166,166,166,166,166,166,166,-90,166,166,166,166,-81,-86,-92,166,-83,-93,-94,-84,-82,-85,-87,]),'CHECK_STOP_SLOTS':([113,153,155,169,197,219,251,310,326,331,355,356,357,359,361,362,364,],[167,167,-91,-74,-73,-80,-90,-81,-86,-92,-83,-93,-94,-84,-82,-85,-87,]),'NOT':([113,140,148,153,155,160,168,169,197,199,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,246,251,298,300,301,306,310,326,331,341,355,356,357,359,361,362,364,],[168,168,168,168,-91,168,168,-74,-73,168,168,168,168,168,168,168,-80,168,168,168,168,168,168,168,168,168,168,168,168,-90,168,168,168,168,-81,-86,-92,168,-83,-93,-94,-84,-82,-85,-87,]),'{':([4,28,43,51,63,70,73,75,76,77,85,90,92,93,94,95,99,100,103,104,114,115,117,118,119,120,121,122,124,135,172,173,174,182,192,234,248,288,295,308,316,334,347,351,353,],[-64,45,-59,-66,45,-50,-51,-72,-65,-68,106,-58,113,-2,-2,-52,-2,123,126,127,-49,113,-53,-70,-69,-71,-67,113,-2,45,-57,-55,-56,238,45,-54,45,113,45,113,-2,113,113,113,113,]),'}':([1,4,6,11,12,14,26,43,45,52,58,64,65,66,69,87,88,89,90,106,109,110,112,113,123,125,126,127,129,130,133,143,153,155,169,170,171,176,177,179,180,181,183,185,186,187,189,190,192,197,207,219,236,237,238,239,241,242,247,251,284,285,289,295,296,310,313,315,319,320,326,331,333,349,350,355,356,357,359,361,362,364,],[-2,-64,-22,-5,-3,-25,-4,-59,-2,-6,-7,-2,90,-63,-21,-2,-62,-2,-58,-2,-60,-61,-9,169,-2,-16,-2,-2,189,-2,-29,197,-76,-91,-74,-27,-24,-26,-23,236,-2,-35,239,241,-2,-38,-17,-28,-13,-73,-75,-80,-19,-34,-2,-18,-20,-37,-15,-90,-36,313,-32,-12,-11,-81,-8,-10,-33,-14,-86,-92,-39,-31,-30,-83,-93,-94,-84,-82,-85,-87,]),'OR':([4,19,21,57,141,142,145,150,154,157,159,162,163,164,165,196,198,203,208,211,233,253,255,258,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,299,303,309,311,324,325,340,342,345,352,360,],[-64,-45,-44,-43,-128,-127,-106,-98,-95,-126,-97,-101,-131,230,-129,230,-100,230,-96,-122,-121,230,-102,-123,230,-130,-117,-120,-112,-107,-114,-116,-110,-111,-113,-109,-108,-119,-115,230,-118,230,-104,-125,-99,-124,-126,230,-103,-88,-105,230,-89,]),'IN_PORT':([0,1,4,6,14,43,52,58,69,90,112,125,169,170,171,176,177,189,192,197,236,238,239,241,247,295,296,313,315,320,],[25,25,-64,-22,-25,-59,-6,-7,-21,-58,-9,-16,-74,-27,-24,-26,-23,-17,-13,-73,-19,25,-18,-20,-15,-12,-11,-8,-10,-14,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,238,],[1,1,1,]),'statements':([92,115,122,288,308,334,347,351,353,],[112,170,176,315,331,349,356,359,361,]),'type_enums':([123,180,],[179,237,]),'pairsx':([50,98,108,],[76,121,76,]),'type_members':([106,126,130,],[129,183,190,]),'statements_inner':([113,153,],[143,207,]),'enumeration':([113,140,148,153,160,168,199,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,240,246,298,300,301,306,341,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,287,150,150,150,150,150,150,]),'file':([0,],[5,]),'type_state':([127,186,],[186,186,]),'type_member':([106,126,130,],[130,130,130,]),'type_or_void':([106,126,130,],[131,131,131,]),'param':([49,53,93,124,245,],[70,70,70,70,70,]),'aexpr':([113,140,148,153,160,168,199,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,246,298,300,301,306,341,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'literal':([113,140,148,153,160,168,199,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,246,298,300,301,306,341,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'params':([49,53,93,124,245,],[71,78,114,182,290,]),'statement':([113,153,],[153,153,]),'var':([111,113,128,140,148,153,160,168,195,199,202,204,205,206,210,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,246,298,300,301,305,306,307,341,],[138,154,188,154,154,154,154,154,250,154,257,259,260,261,263,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,282,283,154,154,154,154,328,154,330,154,]),'if_statement':([113,153,347,],[155,155,357,]),'type':([0,1,27,34,36,39,40,49,53,67,84,93,106,113,124,126,130,140,144,148,153,160,168,199,201,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,238,245,246,297,298,300,301,304,306,317,341,],[10,10,42,54,56,59,60,72,72,91,105,72,132,156,72,132,132,156,198,156,156,156,156,156,256,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,10,292,156,321,156,156,156,327,156,336,156,]),'empty':([0,1,31,42,45,47,49,53,54,55,56,59,60,64,86,87,89,93,94,99,106,123,124,126,127,130,136,138,178,180,186,188,191,199,213,238,245,287,298,300,306,316,317,318,321,327,328,],[11,11,51,51,66,51,73,73,51,51,51,51,51,66,51,66,66,73,51,51,133,181,73,133,187,133,51,51,51,181,187,51,51,252,252,11,291,51,252,252,252,51,337,51,51,51,51,]),'declsx':([0,1,238,],[12,26,12,]),'func_decl':([0,1,238,],[6,6,6,]),'func_def':([0,1,238,],[14,14,14,]),'idents':([28,63,135,192,248,295,],[44,86,192,247,295,320,]),'void':([0,1,106,126,130,238,],[15,15,134,134,134,15,]),'identx':([45,64,87,89,],[65,88,109,110,]),'type_states':([127,186,],[185,242,]),'pair':([50,98,108,],[77,77,77,]),'type_enum':([123,180,],[180,180,]),'typestr':([0,1,27,34,36,39,40,49,53,67,84,93,106,113,124,126,130,140,144,148,153,160,168,199,201,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,238,245,246,297,298,300,301,304,306,317,341,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'types':([245,317,],[293,335,]),'pairs':([31,42,47,54,55,56,59,60,86,94,99,136,138,178,188,191,287,316,318,321,327,328,],[48,62,68,79,80,81,82,83,107,115,122,193,194,235,243,244,314,334,338,339,343,344,]),'ident':([0,1,10,15,27,28,29,30,34,35,36,37,39,40,41,45,49,50,53,63,64,67,72,84,87,89,93,96,97,98,106,108,111,113,123,124,126,127,128,130,131,135,140,144,148,153,156,160,168,180,186,192,195,199,200,201,202,204,205,206,209,210,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,238,240,245,246,248,292,295,297,298,300,301,304,305,306,307,317,341,],[21,21,31,33,21,43,46,47,21,55,21,57,21,21,61,64,21,74,21,43,64,21,95,21,64,64,21,117,118,74,21,136,137,163,178,21,21,184,137,21,191,43,163,21,163,163,208,163,163,178,184,43,137,163,255,21,137,137,137,137,262,137,163,163,266,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,137,137,21,286,21,163,43,95,43,21,163,163,163,21,137,163,137,21,163,]),'expr':([113,140,148,153,160,168,199,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,246,298,300,301,306,341,],[164,196,203,164,211,233,253,264,253,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,294,253,253,325,253,352,]),'exprs':([199,213,298,300,306,],[254,265,322,323,329,]),'decls':([0,238,],[24,285,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',215),
  ('empty -> <empty>','empty',0,'p_empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',219),
  ('decls -> declsx','decls',1,'p_decls','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',222),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',226),
  ('declsx -> empty','declsx',1,'p_declsx__none','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',236),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',240),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',249),
  ('decl -> MACHINE ( ident pairs ) : params { decls }','decl',10,'p_decl__machine','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',258),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',262),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',266),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',270),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents','decl',10,'p_decl__trans0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',274),
  ('decl -> TRANS ( idents , idents pairs ) idents','decl',8,'p_decl__trans1','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',278),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents idents','decl',11,'p_decl__trans2','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',282),
  ('decl -> TRANS ( idents , idents pairs ) idents idents','decl',9,'p_decl__trans3','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',286),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',290),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',295),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',300),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',304),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',309),
  ('decl -> type ident pairs SEMI','decl',4,'p_decl__object','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',315),
  ('decl -> func_decl','decl',1,'p_decl__func_decl','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',320),
  ('func_decl -> void ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',324),
  ('func_decl -> type ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',325),
  ('decl -> func_def','decl',1,'p_decl__func_def','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',329),
  ('func_def -> void ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',333),
  ('func_def -> type ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',334),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',339),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',343),
  ('type_member -> type_or_void ident ( types ) pairs SEMI','type_member',7,'p_type_method__0','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',347),
  ('type_member -> type_or_void ident ( params ) pairs statements','type_member',7,'p_type_method__1','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',351),
  ('type_member -> type_or_void ident pairs SEMI','type_member',4,'p_type_member__1','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',355),
  ('type_member -> type_or_void ident ASSIGN expr SEMI','type_member',5,'p_type_member__2','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',359),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',365),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',369),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',373),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',378),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',382),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',386),
  ('types -> type , types','types',3,'p_types__multiple','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',391),
  ('types -> type','types',1,'p_types__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',395),
  ('types -> empty','types',1,'p_types__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',399),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',403),
  ('typestr -> ident','typestr',1,'p_typestr__single','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',407),
  ('type -> typestr','type',1,'p_type__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',411),
  ('void -> VOID','void',1,'p_void','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',415),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',419),
  ('type_or_void -> void','type_or_void',1,'p_type_or_void','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',420),
  ('params -> param , params','params',3,'p_params__many','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',425),
  ('params -> param','params',1,'p_params__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',429),
  ('params -> empty','params',1,'p_params__none','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',433),
  ('param -> type ident','param',2,'p_param','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',437),
  ('param -> type STAR ident','param',3,'p_param__pointer','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',441),
  ('param -> type STAR ident = STRING','param',5,'p_param__pointer_default','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',445),
  ('param -> type ident = NUMBER','param',4,'p_param__default_number','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',449),
  ('param -> type ident = LIT_BOOL','param',4,'p_param__default_bool','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',453),
  ('param -> type ident = STRING','param',4,'p_param__default_string','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',457),
  ('idents -> { identx }','idents',3,'p_idents__braced','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',462),
  ('idents -> ident','idents',1,'p_idents__bare','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',466),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',470),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',471),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',475),
  ('identx -> empty','identx',1,'p_identx__single','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',479),
  ('ident -> IDENT','ident',1,'p_ident','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',483),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',488),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',492),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',496),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',501),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',506),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',507),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',508),
  ('pair -> STRING','pair',1,'p_pair__literal','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',512),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',517),
  ('statements -> { }','statements',2,'p_statements__none','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',521),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',525),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',529),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',533),
  ('exprs -> expr','exprs',1,'p_exprs__one','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',537),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',541),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',545),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',549),
  ('statement -> ENQUEUE ( var , type pairs ) statements','statement',8,'p_statement__enqueue','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',553),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',557),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',561),
  ('statement -> COPY_HEAD ( var , var pairs ) SEMI','statement',8,'p_statement__copy_head','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',565),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',569),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',573),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_statement__static_cast','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',577),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_statement__static_cast_ptr','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',581),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',585),
  ('statement -> if_statement','statement',1,'p_statement__if','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',589),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',593),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',597),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',601),
  ('aexpr -> var','aexpr',1,'p_expr__var','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',606),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',610),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',614),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',618),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',622),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',626),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',630),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',634),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',638),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',642),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',646),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',650),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',654),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',655),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',656),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',657),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',658),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',659),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',660),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',661),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',662),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',663),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',664),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',665),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',666),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',667),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',672),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',673),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',677),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',681),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',685),
  ('literal -> STRING','literal',1,'p_literal__string','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',689),
  ('literal -> NUMBER','literal',1,'p_literal__number','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',693),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',697),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',701),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',705),
  ('var -> ident','var',1,'p_var','/home/a01973100/ECE5750_project/gem5/src/mem/slicc/parser.py',709),
]
